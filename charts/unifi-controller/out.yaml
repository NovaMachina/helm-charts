---
# Source: unifi-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-unifi-controller
  labels:
    helm.sh/chart: unifi-controller-0.1.0
    app.kubernetes.io/name: unifi-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "8.1.127-ls46"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: unifi-controller/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: release-name-unifi-controller-data
  labels:
    helm.sh/chart: unifi-controller-0.1.0
    app.kubernetes.io/name: unifi-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "8.1.127-ls46"
    app.kubernetes.io/managed-by: Helm  
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
  storageClassName: "local-path-retain"
---
# Source: unifi-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-unifi-controller-tcp
  labels:
    helm.sh/chart: unifi-controller-0.1.0
    app.kubernetes.io/name: unifi-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "8.1.127-ls46"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6789
      targetPort: 6789
      protocol: TCP
      name: speedtest
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: devicecom
    - port: 8443
      targetPort: 8443
      protocol: TCP
      name: webadmin
    - port: 8843
      targetPort: 8843
      protocol: TCP
      name: httpsredirect
    - port: 8880
      targetPort: 8880
      protocol: TCP
      name: httpredirect
  selector:
    app.kubernetes.io/name: unifi-controller
    app.kubernetes.io/instance: release-name
---
# Source: unifi-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-unifi-controller-udp
  labels:
    helm.sh/chart: unifi-controller-0.1.0
    app.kubernetes.io/name: unifi-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "8.1.127-ls46"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 10001
      targetPort: 10001
      protocol: UDP
      name: apdiscovery
    - port: 3478
      targetPort: 3478
      protocol: UDP
      name: stun
    - port: 1900
      targetPort: 1900
      protocol: UDP
      name: appdiscovery
    - port: 5514
      targetPort: 5514
      protocol: UDP
      name: syslog
  selector:
    app.kubernetes.io/name: unifi-controller
    app.kubernetes.io/instance: release-name
---
# Source: unifi-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-unifi-controller
  labels:
    helm.sh/chart: unifi-controller-0.1.0
    app.kubernetes.io/name: unifi-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "8.1.127-ls46"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: unifi-controller
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: unifi-controller-0.1.0
        app.kubernetes.io/name: unifi-controller
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "8.1.127-ls46"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-unifi-controller
      securityContext:
        {}
      containers:
        - name: unifi-controller
          securityContext:
            {}
          image: "lscr.io/linuxserver/unifi-network-application:8.1.127-ls46"
          imagePullPolicy: IfNotPresent
          ports:
            - name: stun
              containerPort: 3478
              protocol: UDP
            - name: syslog
              containerPort: 5514
              protocol: UDP
            - name: speedtest
              containerPort: 6789
              protocol: TCP
            - name: devicecom
              containerPort: 8080
              protocol: TCP
            - name: webadmin
              containerPort: 8443
              protocol: TCP
            - name: httpsredirect
              containerPort: 8843
              protocol: TCP
            - name: httpredirect
              containerPort: 8880
              protocol: TCP
            - name: apdiscovery
              containerPort: 10001
              protocol: UDP
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 20
            tcpSocket:
              port: 8080
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 10
            tcpSocket:
              port: 8080
          resources:
            {}
          volumeMounts:
            - mountPath: "/config"
              name: config
      volumes:
        - name: data
          emptyDir: {}
---
# Source: unifi-controller/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-unifi-controller
  labels:
    helm.sh/chart: unifi-controller-0.1.0
    app.kubernetes.io/name: unifi-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "8.1.127-ls46"
    app.kubernetes.io/managed-by: Helm
spec:
  rules:
    - host: "chart-example.local"
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: release-name-unifi-controller
                port:
                  number: 8443
---
# Source: unifi-controller/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-unifi-controller-test-connection"
  labels:
    helm.sh/chart: unifi-controller-0.1.0
    app.kubernetes.io/name: unifi-controller
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "8.1.127-ls46"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-unifi-controller:8443']
  restartPolicy: Never
